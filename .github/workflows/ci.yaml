# --- START OF REVISED FILE .github/workflows/ci.yaml ---
# GitHub Actions CI Workflow. Ref: cicd.md#2.2.3, backlog-backend.md#6 (SC-STORY-067)
# (No changes needed)

name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"
      - ".gitignore"
      - ".editorconfig"
      - "commitlint.config.js"
      - "package.json"
      - "package-lock.json"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"
      - ".gitignore"
      - ".editorconfig"
      - "commitlint.config.js"
      - "package.json"
      - "package-lock.json"

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-format-vet:
    name: Lint / Format / Vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install commitlint dependencies
        run: npm ci --only=dev

      - name: Verify Formatting (gofmt -s)
        run: |
          fmt_files=$(gofmt -s -l .)
          if [[ -n "$fmt_files" ]]; then
            echo "Go files require formatting (run 'make fmt'):"
            echo "$fmt_files"
            exit 1
          fi
          echo "Formatting check passed."

      - name: Cache Go Binaries (incl. golangci-lint)
        uses: actions/cache@v4
        with:
          path: ${{ env.GOPATH }}/bin
          key: ${{ runner.os }}-gobin-${{ hashFiles('Makefile') }}

      - name: Install golangci-lint (if needed by make lint)
        run: make install-tools

      - name: Run Linters (golangci-lint)
        run: make lint

      - name: Run Vet (go vet)
        run: go vet ./...

      - name: Lint Commit Messages (Conventional Commits)
        uses: wagoid/commitlint-github-action@v6

  test-and-build:
    name: Test & Build (${{ matrix.os }})
    needs: lint-format-vet
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: ["1.24"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run Unit & Integration Tests (with Race Detector on Linux/macOS)
        run: |
          if [[ "${{ runner.os }}" == "Linux" || "${{ runner.os }}" == "macOS" ]]; then
            make test # Assumes 'make test' runs 'go test -race ./...'
          else
            # Run without -race but still generate coverage on Windows
            go test -v -timeout 5m -coverprofile=coverage.out -covermode=atomic ./...
          fi
        env:
          GOTEST_TIMEOUT: 5m

      - name: Upload Code Coverage (Optional)
        if: matrix.os == 'ubuntu-latest' && matrix.go-version == '1.24'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          fail_ci_if_error: true

      - name: Run Vulnerability Scan (govulncheck)
        run: go install golang.org/x/vuln/cmd/govulncheck@latest && govulncheck ./...

      - name: Build Binary
        run: make build
# --- END OF REVISED FILE .github/workflows/ci.yaml ---
